#!/bin/bash

# Subset, deduplicate, and align reads using a refpkg in preparation
# for placement. Requires the following:
# - taxit
# - cmalign
# - esl-sfetch
# - esl-alimerge
# - deduplicate_sequences.py

function abspath(){
    # no readlink -f on Darwin, unfortunately
    python -c "import os; print os.path.abspath(\"$1\")"
}

set -e

if [[ $1 == '-h' || $1 == '--help' ]]; then
    echo "Subset, deduplicate, and align reads"
    echo "Options:"
    echo "--specimen     - (in) string matching second column of seq info file "
    echo "--inseqs       - (in) input fasta file"
    echo "--seq-info     - (in) headerless csv with columns 'seqname','specimen'"
    echo "--refpkg       - (in) a refpkg (Infernal 1.1 format)"
    echo "--dedup-info   - (out) csv.gz compatible with guppy redup"
    echo "--merged       - (out) fasta.gz containing aligned, deduplicated seqs"
    echo "--scores       - (out) txt.gz containing cmalign alignment scores"
    exit 0
fi

while true; do
    case "$1" in
	--specimen ) SPECIMEN="$2"; shift 2 ;;
	--inseqs ) INSEQS="$2"; shift 2 ;;
	--seq-info ) SEQ_INFO="$2"; shift 2 ;;
	--refpkg ) REFPKG="$2"; shift 2 ;;
	--dedup-info ) DEDUP_INFO="$2"; shift 2 ;;
	--merged ) MERGED="$2"; shift 2 ;;
	--scores ) SCORES="$2"; shift 2 ;;
	* ) break ;;
    esac
done

ref_sto=$(taxit rp "${REFPKG:?}" aln_sto)
profile=$(taxit rp "${REFPKG:?}" profile)
tmpdir=$(dirname $DEDUP_INFO)
dedup_tmp=$(mktemp --tmpdir=$tmpdir dedup.XXXXXXXXXXX.fasta)
sto_tmp=$(mktemp --tmpdir=$tmpdir dedup.XXXXXXXXXXX.sto)

grep -w "${SPECIMEN:?}" "${SEQ_INFO:?}" | \
    cut -f1 -d, | \
    esl-sfetch -f "${INSEQS:?}" - | \
    deduplicate_sequences.py - $dedup_tmp \
    --deduplicated-sequences-file "${DEDUP_INFO%.gz}"

cmalign -o $sto_tmp --sfile "${SCORES%.gz}" \
    --noprob --dnaout \
    $profile $dedup_tmp | grep -E '^#'

esl-alimerge --dna --outformat afa $ref_sto $sto_tmp | \
    seqmagick convert --apply-function bin/seqmagick_extensions.py:replace_dots - "${MERGED:?}"

gzip "${SCORES%.gz}" "${DEDUP_INFO%.gz}"

rm -f $dedup_tmp $sto_tmp
