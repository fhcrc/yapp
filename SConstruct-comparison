import os
from os import path
import sys
import glob

# Ensure that a virtualenv is active before importing non-stdlib dependencies.
venv = os.environ.get('VIRTUAL_ENV')
if not venv:
    sys.exit('--> an active virtualenv is required'.format(venv))

from SCons.Script import (Environment, Variables, Help, Decider)

# check timestamps before calculating md5 checksums
Decider('MD5-timestamp')

# Define some PATH elements explicitly.
PATH=':'.join([
    'bin',
    path.join(venv, 'bin'),
    '/app/bin',  # provides R
    '/usr/local/bin', '/usr/bin', '/bin'])

vars = Variables()
vars.Add('out', default='output')

# Provides access to options prior to instantiation of env object
# below; it's better to access variables through the env object.
varargs = dict({opt.key: opt.default for opt in vars.options}, **vars.args)
truevals = {True, 'yes', 'y', 'True', 'true', 't'}

# define boolean variables like
# varname = varargs['varname'] in truevals

# SHELLOPTS sets shell options to fail (including piped commands) with
# nonzero exit status; this requires bash.
env = Environment(
    ENV=dict(os.environ, PATH=PATH, SHELLOPTS='errexit:pipefail'),
    variables=vars,
    SHELL='bash',
)

env['r_img'] = '/fh/fast/fredricks_d/bvdiversity/singularity/r-reporting-0.3.img'
env['datadir'] = '/fh/fast/fredricks_d/bvdiversity/data/miseq-plate-12-ireads'

Help(vars.GenerateHelpText(env))

# ############### start inputs ################
outdirs = glob.glob('output-*')
labels = [d.replace('output-', '') for d in outdirs]
# ############### end inputs ##################

labels = env.Command(
    target='$out/labels.csv',
    source='$datadir/sample-information/sample-information-m12.xlsx',
    action='in2csv $SOURCE > $TARGET'
)

# https://uwnetid-my.sharepoint.com/personal/sticrc_uw_edu/sticrc/project3/Shared%20Documents/FromMicrobiomeCore/2017-05-04-crc3/METADATA/plate12_finalmetadata_20170510.xlsx?d=w805298ed04fe4f2f958bbc8a2f599597&csf=1
metadata = env.Command(
    target='$out/metadata.csv',
    source='data/plate12_finalmetadata_20170510.xlsx',
    action='in2csv $SOURCE > $TARGET'
)

# report = env.Command(
#     target='barcodecop-comparison.html',
#     source='barcodecop-comparison.Rmd',
#     action=('/app/singularity/2.3.1/bin/singularity exec '
#             '--bind "$$(pwd):$$(pwd)" '
#             '--workdir "$$(pwd)" '
#             '$r_img R -e '
#             '"library(rmarkdown); '
#             'render(\"barcodecop-comparison.Rmd\", output_file=\"barcodecop-comparison.html\")"')
# )
